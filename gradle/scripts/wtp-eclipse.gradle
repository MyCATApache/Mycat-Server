
configurations.all {
	resolutionStrategy {
		cacheChangingModulesFor 0, 'seconds'
		//cacheDynamicVersionsFor 0, 'seconds'
	}
}

if(stage == "dev") {
    repoUrl = repositoriesUrlDev
} else if(stage == "test") {
    repoUrl = repositoriesUrlTest
} else if(stage == "pro") {
    repoUrl = repositoriesUrl
}


repositories {
	maven {
		url repoUrl
	}
}
eclipse {
	classpath {
	  file {
		//closure executed after .classpath content is loaded from existing file
		//but before gradle build information is merged
		beforeMerged { classpath ->
		  //you can tinker with the Classpath here
			//println "beforeMerged ## ${classpath}"
			classpath.entries.findAll {entry->
				entry.kind == 'lib'
			}
			
		}
  
		//closure executed after .classpath content is loaded from existing file
		//and after gradle build information is merged
		whenMerged { classpath ->
		  //you can tinker with the Classpath here
			classpath.entries.findAll {entry->
				entry.kind == 'lib'
			}
		}
	  }
	}
	
	
	wtp {
		component {
		  file {
	
			//closure executed after wtp component file content is loaded from existing file
			//but before gradle build information is merged
			beforeMerged { wtpComponent ->
			  //tinker with WtpComponent here
			}
	
			//closure executed after wtp component file content is loaded from existing file
			//and after gradle build information is merged
			whenMerged { wtpComponent ->
			  //you can tinker with the WtpComponent here
				List modules = wtpComponent.wbModuleEntries.findAll {module->
					module.getClass().getName().endsWith("Module")
				}
				wtpComponent.wbModuleEntries.removeAll(modules)
				modules.sort {module->
					def handle = module.handle
					handle[handle.lastIndexOf('/')..-1]
				}
				wtpComponent.wbModuleEntries.addAll(modules)
				//wtpComponent.wbModuleEntries.addAll(modules)
			}
		  }
		}
	  }
  }

task eclipseCoreAndJdtUi << {
	//设置工程的编码为utf-8
	def settingsDir = new File(".settings")
	if(!settingsDir.exists()) {
		settingsDir.mkdir()
	}
	def eclipseCore = new File(".settings/org.eclipse.core.resources.prefs")
	if(!eclipseCore.exists()) {
		eclipseCore.append("#${new Date()}\n")
		eclipseCore.append("eclipse.preferences.version=1\n")
		eclipseCore.append("encoding/<project>=${sourceEncoding}")
	}
	
	def eclipseJdtUi = new File(".settings/org.eclipse.jdt.ui.prefs")
	if(!eclipseJdtUi.exists()) {
		eclipseJdtUi.append("#${new Date()}\n")
		eclipseJdtUi.append("eclipse.preferences.version=1\n")
		eclipseJdtUi.append("org.eclipse.jdt.ui.javadoc=false\n")
		eclipseJdtUi.append("""org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\\="1.0" encoding\\="UTF-8" standalone\\="no"?><templates><template autoinsert\\="true" context\\="gettercomment_context" deleted\\="false" description\\="Comment for getter method" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.gettercomment" name\\="gettercomment">/**\\r\\n * @return the \${bare_field_name}\\r\\n */</template><template autoinsert\\="true" context\\="settercomment_context" deleted\\="false" description\\="Comment for setter method" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.settercomment" name\\="settercomment">/**\\r\\n * @param \${param} the \${bare_field_name} to set\\r\\n */</template><template autoinsert\\="true" context\\="constructorcomment_context" deleted\\="false" description\\="Comment for created constructors" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.constructorcomment" name\\="constructorcomment">/**\\r\\n * \${tags}\\r\\n */</template><template autoinsert\\="true" context\\="filecomment_context" deleted\\="false" description\\="Comment for created Java files" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.filecomment" name\\="filecomment">/**\\r\\n * \\r\\n */</template><template autoinsert\\="false" context\\="typecomment_context" deleted\\="false" description\\="Comment for created types" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.typecomment" name\\="typecomment">/**\\r\\n * @author \${user}&lt;br&gt;\\r\\n * @version 1.0\\r\\n * \${date} \${time}&lt;br&gt;\\r\\n * \${tags}\\r\\n */</template><template autoinsert\\="true" context\\="fieldcomment_context" deleted\\="false" description\\="Comment for fields" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.fieldcomment" name\\="fieldcomment">/**\\r\\n * \\r\\n */</template><template autoinsert\\="true" context\\="methodcomment_context" deleted\\="false" description\\="Comment for non-overriding methods" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.methodcomment" name\\="methodcomment">/**\\r\\n * \${tags}\\r\\n */</template><template autoinsert\\="true" context\\="overridecomment_context" deleted\\="false" description\\="Comment for overriding methods" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.overridecomment" name\\="overridecomment">/* (non-Javadoc)\\r\\n * \${see_to_overridden}\\r\\n */</template><template autoinsert\\="true" context\\="delegatecomment_context" deleted\\="false" description\\="Comment for delegate methods" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.delegatecomment" name\\="delegatecomment">/**\\r\\n * \${tags}\\r\\n * \${see_to_target}\\r\\n */</template><template autoinsert\\="true" context\\="newtype_context" deleted\\="false" description\\="Newly created files" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.newtype" name\\="newtype">\${filecomment}\\r\\n\${package_declaration}\\r\\n\\r\\n\${typecomment}\\r\\n\${type_declaration}</template><template autoinsert\\="true" context\\="classbody_context" deleted\\="false" description\\="Code in new class type bodies" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.classbody" name\\="classbody">\\r\\n</template><template autoinsert\\="true" context\\="interfacebody_context" deleted\\="false" description\\="Code in new interface type bodies" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.interfacebody" name\\="interfacebody">\\r\\n</template><template autoinsert\\="true" context\\="enumbody_context" deleted\\="false" description\\="Code in new enum type bodies" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.enumbody" name\\="enumbody">\\r\\n</template><template autoinsert\\="true" context\\="annotationbody_context" deleted\\="false" description\\="Code in new annotation type bodies" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.annotationbody" name\\="annotationbody">\\r\\n</template><template autoinsert\\="true" context\\="catchblock_context" deleted\\="false" description\\="Code in new catch blocks" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.catchblock" name\\="catchblock">// \${todo} Auto-generated catch block\\r\\n\${exception_var}.printStackTrace();</template><template autoinsert\\="true" context\\="methodbody_context" deleted\\="false" description\\="Code in created method stubs" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.methodbody" name\\="methodbody">// \${todo} Auto-generated method stub\\r\\n\${body_statement}</template><template autoinsert\\="true" context\\="constructorbody_context" deleted\\="false" description\\="Code in created constructor stubs" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.constructorbody" name\\="constructorbody">\${body_statement}\\r\\n// \${todo} Auto-generated constructor stub</template><template autoinsert\\="true" context\\="getterbody_context" deleted\\="false" description\\="Code in created getters" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.getterbody" name\\="getterbody">return \${field};</template><template autoinsert\\="true" context\\="setterbody_context" deleted\\="false" description\\="Code in created setters" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.setterbody" name\\="setterbody">\${field} \\= \${param};</template><template autoinsert\\="true" context\\="gettercomment_context" deleted\\="false" description\\="Comment for getter function" enabled\\="true" id\\="org.eclipse.wst.jsdt.ui.text.codetemplates.gettercomment" name\\="gettercomment">/**\\r\\n * @return the \${bare_field_name}\\r\\n */</template><template autoinsert\\="true" context\\="settercomment_context" deleted\\="false" description\\="Comment for setter function" enabled\\="true" id\\="org.eclipse.wst.jsdt.ui.text.codetemplates.settercomment" name\\="settercomment">/**\\r\\n * @param \${param} the \${bare_field_name} to set\\r\\n */</template><template autoinsert\\="true" context\\="constructorcomment_context" deleted\\="false" description\\="Comment for created constructors" enabled\\="true" id\\="org.eclipse.wst.jsdt.ui.text.codetemplates.constructorcomment" name\\="constructorcomment">/**\\r\\n * \${tags}\\r\\n */</template><template autoinsert\\="true" context\\="filecomment_context" deleted\\="false" description\\="Comment for created JavaScript files" enabled\\="true" id\\="org.eclipse.wst.jsdt.ui.text.codetemplates.filecomment" name\\="filecomment">/**\\r\\n * \\r\\n */</template><template autoinsert\\="true" context\\="typecomment_context" deleted\\="false" description\\="Comment for created types" enabled\\="true" id\\="org.eclipse.wst.jsdt.ui.text.codetemplates.typecomment" name\\="typecomment">/**\\r\\n * @author \${user}\\r\\n *\\r\\n * \${tags}\\r\\n */</template><template autoinsert\\="true" context\\="fieldcomment_context" deleted\\="false" description\\="Comment for vars" enabled\\="true" id\\="org.eclipse.wst.jsdt.ui.text.codetemplates.fieldcomment" name\\="fieldcomment">/**\\r\\n * \\r\\n */</template><template autoinsert\\="true" context\\="methodcomment_context" deleted\\="false" description\\="Comment for non-overriding function" enabled\\="true" id\\="org.eclipse.wst.jsdt.ui.text.codetemplates.methodcomment" name\\="methodcomment">/**\\r\\n * \${tags}\\r\\n */</template><template autoinsert\\="true" context\\="overridecomment_context" deleted\\="false" description\\="Comment for overriding functions" enabled\\="true" id\\="org.eclipse.wst.jsdt.ui.text.codetemplates.overridecomment" name\\="overridecomment">/* (non-JSDoc)\\r\\n * \${see_to_overridden}\\r\\n */</template><template autoinsert\\="true" context\\="delegatecomment_context" deleted\\="false" description\\="Comment for delegate functions" enabled\\="true" id\\="org.eclipse.wst.jsdt.ui.text.codetemplates.delegatecomment" name\\="delegatecomment">/**\\r\\n * \${tags}\\r\\n * \${see_to_target}\\r\\n */</template><template autoinsert\\="true" context\\="newtype_context" deleted\\="false" description\\="Newly created files" enabled\\="true" id\\="org.eclipse.wst.jsdt.ui.text.codetemplates.newtype" name\\="newtype">\${filecomment}\\r\\n\${package_declaration}\\r\\n\\r\\n\${typecomment}\\r\\n\${type_declaration}</template><template autoinsert\\="true" context\\="classbody_context" deleted\\="false" description\\="Code in new class type bodies" enabled\\="true" id\\="org.eclipse.wst.jsdt.ui.text.codetemplates.classbody" name\\="classbody">\\r\\n</template><template autoinsert\\="true" context\\="catchblock_context" deleted\\="false" description\\="Code in new catch blocks" enabled\\="true" id\\="org.eclipse.wst.jsdt.ui.text.codetemplates.catchblock" name\\="catchblock">// \${todo} Auto-generated catch block\\r\\n\${exception_var}.printStackTrace();</template><template autoinsert\\="true" context\\="methodbody_context" deleted\\="false" description\\="Code in created function stubs" enabled\\="true" id\\="org.eclipse.wst.jsdt.ui.text.codetemplates.methodbody" name\\="methodbody">// \${todo} Auto-generated function stub\\r\\n\${body_statement}</template><template autoinsert\\="true" context\\="constructorbody_context" deleted\\="false" description\\="Code in created constructor stubs" enabled\\="true" id\\="org.eclipse.wst.jsdt.ui.text.codetemplates.constructorbody" name\\="constructorbody">\${body_statement}\\r\\n// \${todo} Auto-generated constructor stub</template><template autoinsert\\="true" context\\="getterbody_context" deleted\\="false" description\\="Code in created getters" enabled\\="true" id\\="org.eclipse.wst.jsdt.ui.text.codetemplates.getterbody" name\\="getterbody">return \${field};</template><template autoinsert\\="true" context\\="setterbody_context" deleted\\="false" description\\="Code in created setters" enabled\\="true" id\\="org.eclipse.wst.jsdt.ui.text.codetemplates.setterbody" name\\="setterbody">\${field} \\= \${param};</template></templates>""".toString())
	}
}
eclipseJdt.dependsOn eclipseCoreAndJdtUi
